// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// CovToPrecisionChol_cpp
Eigen::SparseMatrix<double,0,int> CovToPrecisionChol_cpp(Eigen::SparseMatrix<double,0,int>& L, Eigen::MatrixXd Sigma);
RcppExport SEXP EmpericalSparsePrecision_CovToPrecisionChol_cpp(SEXP LSEXP, SEXP SigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::SparseMatrix<double,0,int>& >::type L(LSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type Sigma(SigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(CovToPrecisionChol_cpp(L, Sigma));
    return rcpp_result_gen;
END_RCPP
}
// reorder_cpp
Rcpp::List reorder_cpp(Eigen::SparseMatrix<double,0,int>& K);
RcppExport SEXP EmpericalSparsePrecision_reorder_cpp(SEXP KSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::SparseMatrix<double,0,int>& >::type K(KSEXP);
    rcpp_result_gen = Rcpp::wrap(reorder_cpp(K));
    return rcpp_result_gen;
END_RCPP
}
// symbolicCholeskyFactor_cpp
Eigen::SparseMatrix<double,0,int> symbolicCholeskyFactor_cpp(Eigen::SparseMatrix<double,0,int>& K);
RcppExport SEXP EmpericalSparsePrecision_symbolicCholeskyFactor_cpp(SEXP KSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::SparseMatrix<double,0,int>& >::type K(KSEXP);
    rcpp_result_gen = Rcpp::wrap(symbolicCholeskyFactor_cpp(K));
    return rcpp_result_gen;
END_RCPP
}
